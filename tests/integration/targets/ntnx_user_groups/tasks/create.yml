---
- debug:
    msg: start ntnx_user_groups create tests

- name: create user  group
  ntnx_user_groups:
    distinguished_name: "{{distinguished_name}}"
    project:
      uuid: "{{project.uuid}}"
    categories:
      Environment:
        - "Dev"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.response.status.state == "COMPLETE"
      - result.user_group_uuid is defined
      - result.response.metadata.project_reference.uuid == "{{project.uuid}}"
      - result.response.status.resources.directory_service_user_group.distinguished_name == "{{distinguished_name}}"
    fail_msg: "Unable to create user  group  "
    success_msg: "user  group created successfully"

- name: delete user group
  ntnx_user_groups:
    state: absent
    user_group_uuid: "{{result.user_group_uuid}}"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.response.status == "SUCCEEDED" or  result.response.status.state == "DELETE_PENDING"
    fail_msg: "Unable to delete user  group  "
    success_msg: "user  group deletd successfully"


#- name: create user group with idp
#  ntnx_user_groups:
#    idp:
#      idp_uuid: "{{identity_provider_uuid}}"
#      group_name: test_group_987
#  register: result
#  ignore_errors: true
#
#- name: check listing status
#  assert:
#    that:
#      - result.response is defined
#      - result.failed == false
#      - result.changed == true
#      - result.response.status.state == "COMPLETE"
#      - result.user_group_uuid is defined
#      - result.response.status.resources.display_name == "test_group_987"
#    fail_msg: "Unable to create user  group with idp  "
#    success_msg: "user  group with idp created successfully"

#- name: delete user group
#  ntnx_user_groups:
#    state: absent
#    user_group_uuid: "{{result.user_group_uuid}}"
#  register: result
#  ignore_errors: true
#
#- name: check listing status
#  assert:
#    that:
#      - result.response is defined
#      - result.failed == false
#      - result.changed == true
#      - result.response.status == "SUCCEEDED"
#    fail_msg: "Unable to delete user  group with idp  "
#    success_msg: "user  group with idp deleted successfully"