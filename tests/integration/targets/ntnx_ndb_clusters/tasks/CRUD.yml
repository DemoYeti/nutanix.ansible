---
- debug:
    msg: Start testing ntnx_ndb_clusters

- name: Register Cluster with prism_vlan
  ntnx_ndb_clusters:
      wait: true
      name: "{{Cluster.cluster2.name}}"
      desc: "{{Cluster.cluster2.desc}}"
      name_prefix: "{{Cluster.cluster2.name_prefix}}"
      cluster_ip: "{{Cluster.cluster2.cluster_ip}}"
      cluster_credentials:
        username: "{{Cluster.cluster2.cluster_credentials.username}}"
        password: "{{Cluster.cluster2.cluster_credentials.password}}"
      agent_network:
        dns_servers:
          - "{{Cluster.cluster2.agent_network.dns_servers[0]}}"
          - "{{Cluster.cluster2.agent_network.dns_servers[1]}}"
        ntp_servers:
          - "{{Cluster.cluster2.agent_network.ntp_servers[0]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[1]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[2]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[3]}}"
      vlan_access:
        prism_vlan:
          vlan_name: "{{Cluster.cluster2.vlan_access.prism_vlan.vlan_name}}"
          vlan_type: "{{Cluster.cluster2.vlan_access.prism_vlan.vlan_type}}"
          static_ip: "{{Cluster.cluster2.vlan_access.prism_vlan.static_ip}}"
          gateway: "{{Cluster.cluster2.vlan_access.prism_vlan.gateway}}"
          subnet_mask: "{{Cluster.cluster2.vlan_access.prism_vlan.subnet_mask}}"
      storage_container: "{{Cluster.cluster2.storage_container}}"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.response.name == "{{Cluster.cluster2.name}}"
      - result.response.description == "{{Cluster.cluster2.desc}}"
      - result.response.ipAddresses[0] == "{{Cluster.cluster2.cluster_ip}}"
    fail_msg: "fail: Unable to Register Cluster with prisim_vlan"
    success_msg: "pass: Register Cluster with prisim_vlan finished successfully"

################################################################

- name: update cluster name , desc
  ntnx_ndb_clusters:
      uuid:  "{{result.cluster_uuid}}"
      name: newname
      desc: newdesc
  register: result
  ignore_errors: true
- debug:
    var: result
- name: check listing status
  assert:
    that:
      - result.response.name == "newname"
      - result.response.description == "newdesc"
    fail_msg: "fail: Unable to update cluster name , desc"
    success_msg: "pass: update cluster name , desc finished successfully"

################################################################

- name: Negative Secnarios update storage container
  ntnx_ndb_clusters:
      uuid:  "{{result.cluster_uuid}}"
      storage_container: "{{Cluster.cluster2.storage_container}}"
  register: out
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - out.changed == false
      - out.failed == true
      - out.msg == "parameters are mutually exclusive: uuid|storage_container"
    fail_msg: "Fail: storage_continer updated "
    success_msg: " Success: returned error as expected "

################################################################

- name: Negative Secnarios update vlan access
  ntnx_ndb_clusters:
      uuid:  "{{result.cluster_uuid}}"
      vlan_access:
        prism_vlan:
          vlan_name: "{{Cluster.cluster2.vlan_access.prism_vlan.vlan_name}}"
          vlan_type: "{{Cluster.cluster2.vlan_access.prism_vlan.vlan_type}}"
          static_ip: "{{Cluster.cluster2.vlan_access.prism_vlan.static_ip}}"
          gateway: "{{Cluster.cluster2.vlan_access.prism_vlan.gateway}}"
          subnet_mask: "{{Cluster.cluster2.vlan_access.prism_vlan.subnet_mask}}"
  register: out
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - out.changed == false
      - out.failed == true
      - out.msg == "parameters are mutually exclusive: uuid|vlan_access"
    fail_msg: "Fail: vlan_access updated "
    success_msg: " Success: returned error as expected "

################################################################

- name: Negative Secnarios update agent network
  ntnx_ndb_clusters:
      uuid:  "{{result.cluster_uuid}}"
      agent_network:
        dns_servers:
          - "{{Cluster.cluster2.agent_network.dns_servers[0]}}"
          - "{{Cluster.cluster2.agent_network.dns_servers[1]}}"
        ntp_servers:
          - "{{Cluster.cluster2.agent_network.ntp_servers[0]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[1]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[2]}}"
          - "{{Cluster.cluster2.agent_network.ntp_servers[3]}}"
  register: out
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - out.changed == false
      - out.failed == true
      - out.msg == "parameters are mutually exclusive: uuid|agent_network"
    fail_msg: "Fail: agent_network updated "
    success_msg: " Success: returned error as expected "

################################################################

- name: Negative Secnarios update agent network
  ntnx_ndb_clusters:
      uuid:  "{{result.cluster_uuid}}"
      name_prefix: "{{Cluster.cluster2.name_prefix}}"
  register: out
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - out.changed == false
      - out.failed == true
      - out.msg == "parameters are mutually exclusive: uuid|name_prefix"
    fail_msg: "Fail: name_prefix updated "
    success_msg: " Success: returned error as expected "

################################################################

- name: List all NDB clusters
  ntnx_ndb_clusters_info:
  register: clusters

- name: check listing status
  assert:
    that:
      - clusters.response is defined
      - clusters.failed == false
      - clusters.changed == false
      - clusters.response | length > 0
    fail_msg: "Unable to list all NDB clusters"
    success_msg: "NDB clusters listed successfully"

################################################################

- name: get NDB clusters using it's name
  ntnx_ndb_clusters_info:
    name: "{{clusters.response[0].name}}"
  register: result

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name == "{{clusters.response[0].name}}"
    fail_msg: "Unable to get NDB clusters using it's name  "
    success_msg: "get  NDB clusters using it's name  successfully"

################################################################

- name: List clusters use id
  ntnx_ndb_clusters_info:
    uuid: "{{clusters.response[0].id}}"
  register: result

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name == "{{clusters.response[0].name}}"
    fail_msg: "Unable to get NDB clusters using it's id  "
    success_msg: "get  NDB clusters using it's id  successfully"

################################################################

- name: get NDB clusters with incorrect name
  ntnx_ndb_clusters_info:
    name: "abcd"
  register: result
  ignore_errors: True
  no_log: true

- name: check listing status
  assert:
    that:
      - result.error is defined
      - result.failed == true
      - result.changed == false
    fail_msg: "module didn't errored out correctly when incorrect name is given"
    success_msg: "module errored out correctly when incorrect name is given"

################################################################

- name: delete cluster
  ntnx_ndb_clusters:
      uuid:    "{{result.cluster_uuid}}"
      state: absent
  register: result
  ignore_errors: true

- name: assert when status not complete
  assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.failed == false
      - result.response.status == "DELETED"
    fail_msg: "Unable to delete custer"
    success_msg: "cluster  deleted successfully"


